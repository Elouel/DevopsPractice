# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
    paths:
      - 'App/**'
      - '.github/workflows/**'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  prebuild:
    runs-on: ubuntu-latest
    steps: 
      - name: Gitleaks
        uses: zricethezav/gitleaks-action@v1
          
  # This workflow contains a single job called "build"
  build:
    needs: prebuild
    runs-on: ubuntu-latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v1
        with:
          languages: 'csharp'

      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0.x'
          include-prerelease: true
      - run: dotnet build App/DevopsTest/DevopsTest.csproj /p:UseSharedCompilation=false
      
          
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v1
    
 # This workflow contains a single job called "build"
  pack:
    # The type of runner that the job will run on
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Docker Login
        uses: docker/login-action@v1.12.0
        with:
          # Username used to log against the Docker registry
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          # Password or personal access token used to log against the Docker registry
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./App/DevopsTest
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/app:${{ env.GITHUB_RUN_NUMBER }},${{ secrets.DOCKERHUB_USERNAME }}/app:latest

  scanimage:
    needs: pack
    runs-on: ubuntu-latest
    steps:
      - name: Run Snyk to check Docker image for vulnerabilities
        uses: snyk/actions/docker@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          image: ${{ secrets.DOCKERHUB_USERNAME }}/app:latest

