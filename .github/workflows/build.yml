# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        
      - name: Docker Login
      # You may pin to the exact commit or the version.
      # uses: docker/login-action@42d299face0c5c43a0487c477f595ac9cf22f1a7
        uses: docker/login-action@v1.12.0
        with:
          # Username used to log against the Docker registry
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          # Password or personal access token used to log against the Docker registry
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./DevopsTest
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/app:latest

      - name: Run Snyk to check Docker image for vulnerabilities
        # Snyk can be used to break the build when it detects vulnerabilities.
        # In this case we want to upload the issues to GitHub Code Scanning
        continue-on-error: true
        uses: snyk/actions/docker@master
        env:
          # In order to use the Snyk Action you will need to have a Snyk API token.
          # More details in https://github.com/snyk/actions#getting-your-snyk-token
          # or you can signup for free at https://snyk.io/login
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --file=Dockerfile
          image: elouel/app:latest
          json: true
      - uses: garethr/snyk-to-sarif@master
      - uses: actions/upload-artifact@v2
        with:
          name: SARIF
          path: snyk.sarif
      - name: Upload the SARIF file
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: snyk.sarif

